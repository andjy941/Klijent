package rs.ac.bg.fon.ps.view.form;



import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import rs.ac.bg.fon.ps.communication.Communication;
import rs.ac.bg.fon.ps.PSCommon.domain.Klijent;
import rs.ac.bg.fon.ps.PSCommon.domain.PlanGledanja;
import rs.ac.bg.fon.ps.PSCommon.domain.Predstava;

/**
 * Forma koja sluzi za pravljenje plana gledanja klijenta
 * moze se uneti za klijenta sta je gledao i ocenu njegovu
 * ili sta nije gledao a zeli
 * @author andelalausevic
 */
public class FrmPlanGledanja extends javax.swing.JDialog {

  
/**
 * Konstruktor koji kreira novi dijalog za plan gledanja.
 * @param parent Roditeljski okvir
 * @param modal Modalnost dijaloga
 */
    public FrmPlanGledanja(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jClient = new javax.swing.JLabel();
        cbClients = new javax.swing.JComboBox<>();
        lblPredstava = new javax.swing.JLabel();
        cbProduct = new javax.swing.JComboBox<>();
        lblGrade = new javax.swing.JLabel();
        txtGrade = new javax.swing.JTextField();
        lblWatched = new javax.swing.JLabel();
        cbWatched = new javax.swing.JComboBox<>();
        btnSaveProduct1 = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Form for Plan Gledanja");

        jClient.setText("Clients:");

        lblPredstava.setText("Show:");

        lblGrade.setText("Grade:");

        lblWatched.setText("Watched:");

        cbWatched.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ne", "da" }));

        btnSaveProduct1.setText("Cancel");
        btnSaveProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProduct1ActionPerformed(evt);
            }
        });

        btnSave.setText("Save Changes");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jClient, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPredstava, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrade)
                    .addComponent(lblWatched))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGrade, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbProduct, 0, 392, Short.MAX_VALUE)
                                .addComponent(cbClients, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbWatched, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btnSaveProduct1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addGap(0, 174, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jClient)
                    .addComponent(cbClients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPredstava, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrade))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWatched)
                    .addComponent(cbWatched, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveProduct1)
                    .addComponent(btnSave))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Ova metoda se ne korist,zanemariti je
 * @param evt je  dogadjaj koji je okinuo metodu
 */
    private void btnSaveProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProduct1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSaveProduct1ActionPerformed
/**
 * Metoda koja se poziva kada korisnik pritisne dugme za čuvanje.
 * Validira unete podatke, kreira i čuva novi plan gledanja na osnovu unetih podataka.
 * Zatim prikazuje poruku o uspešnom čuvanju i zatvara trenutni dijalog.
 * Ako se desi greška, prikazuje poruku o neuspešnom čuvanju i detalje greške.
 * Mora da se izabere klijent i predstava bez njih nije moguce napraviti plan
 * uzima se i ocena koja ne sme biti prazna
 * i setuje se da li je gledao na osnovu izbora na formi
 * bice prikazano da li je sacuvan ili ne
 * @param evt Događaj koji je okidač za poziv metode
 */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
         try {
                    
                    PlanGledanja pl=new PlanGledanja();
                    Predstava pr= (Predstava)getCbPredstava().getSelectedItem();
                    pl.setPredstavaId(pr);
                    Klijent kl=(Klijent)getCbClient().getSelectedItem();
                    pl.setKlijentId(kl);
                    if(getCbWatched().getSelectedItem().equals("ne")){
                        pl.setGledao(false);
                    }
                    else{
                        pl.setGledao(true);
                    }
                    pl.setOcena(Integer.parseInt(getTxtGrade().getText()));
                    savePlan(pl);
                    JOptionPane.showMessageDialog(this, "PlanGledanja is saved");
                    this.dispose();
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "PlanGledanja is not saved! " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

                }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
 * Metoda koja vraća oznaku za prikaz predstave.
 * @return Oznaka za prikaz predstave
 */
    public JLabel getLblShow() {
        return lblPredstava;
    }
    /**
 * Metoda koja vraća oznaku za popust.
 * @return Oznaka za popust
 */
     public JLabel getLblDiscount() {
        return lblGrade;
    }
     /**
 * Metoda koja vraća oznaku za status gledanja.
 * @return Oznaka za status gledanja
 */
    public JLabel getLblWatched() {
        return lblWatched;
    }
   /**
 * Metoda koja vraća oznaku za klijenta.
 * @return Oznaka za klijenta
 */
     public JLabel getLblClient() {
        return jClient;
    }
/**
 * Metoda koja vraća padajuću listu za izbor predstave.
 * @return Padajuća lista za izbor predstave
 */
    public JComboBox<Object> getCbPredstava() {
        return cbProduct;
    }
    /**
 * Metoda koja vraća padajuću listu za izbor klijenta.
 * @return Padajuća lista za izbor klijenta
 */
    public JComboBox<Object> getCbClient() {
        return cbClients;
    }
    /**
 * Metoda koja vraća padajuću listu za izbor statusa gledanja.
 * @return Padajuća lista za izbor statusa gledanja
 */
      public JComboBox<String> getCbWatched() {
        return cbWatched;
    }

   
  /**
 * Metoda koja vraća dugme za čuvanje.
 * @return Dugme za čuvanje
 */
    public JButton getBtnSave(){
       return btnSave;
   }
  
  
    
 
/**
 * Metoda koja vraca polje za ocenu
 * @return polje za ocenu
 */
    public JTextField getTxtGrade() {
        return txtGrade;
    }

    

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveProduct1;
    private javax.swing.JComboBox<Object> cbClients;
    private javax.swing.JComboBox<Object> cbProduct;
    private javax.swing.JComboBox<String> cbWatched;
    private javax.swing.JLabel jClient;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblPredstava;
    private javax.swing.JLabel lblWatched;
    private javax.swing.JTextField txtGrade;
    // End of variables declaration//GEN-END:variables
/**
 * Metoda koja namesta formu za prikaz korisniku.
 * puni combo box klijentima i predstavama.
 */
    private void prepareView() {
        try {
            getCbPredstava().setModel(new DefaultComboBoxModel(getProducts().toArray()));
            getCbPredstava().setSelectedIndex(-1);
             getCbClient().setModel(new DefaultComboBoxModel(getClients().toArray()));
            getCbClient().setSelectedIndex(-1);
        } catch (Exception ex) {
            Logger.getLogger(FrmPlanGledanja.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        

    }

    

 
/**
 * Metoda koja vraca listu predstavi iz baze
 * @return listu predstavi
 * @throws Exception ako dodje do greske sa konekcijom
 */
    private List<Predstava> getProducts() throws Exception {
        return Communication.getInstance().getAllProducts();
    }
    /**
     * Metoda koja vraca listu klijenata iz baze
     * @return listu klijenata
     * @throws Exception ako dodje do greske sa konekcijom
     */
  private List<Klijent> getClients() throws Exception {
        return Communication.getInstance().getAllClients();
    }


/**
 * Metoda za cuvanje plana gledanja u bazi
 * @param pl plangledanja koji treba da se sacuva
 * @throws Exception koji se baca ako dodje do greske
 */
    private void savePlan(PlanGledanja pl) throws Exception {
         Communication.getInstance().savePlan(pl);
    }
}
